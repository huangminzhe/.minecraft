<!--Date: 2015/06/20-->
<!--Version: 2.2.736-experimental-->
<oo>
	<init>
		function gticit(n,cap) {
			if(nbt['inputTank']['Empty']==undefined) {
				return fluidName(n['inputTank']['FluidName'])+GRAY+" ("+WHITE+n['inputTank']['Amount']+GRAY+" / "+WHITE+cap+GRAY+" mB"+")"}
		}
		function gticot(n,cap) {
			if(nbt['outputTank']['Empty']==undefined) {
				return fluidName(n['outputTank']['FluidName'])+GRAY+" ("+WHITE+n['outputTank']['Amount']+GRAY+" / "+WHITE+cap+GRAY+" mB"+")"}
		}
		function gticft(n,cap) {
			if(nbt['fluidTank']['Empty']==undefined) {
				return fluidName(n['fluidTank']['FluidName'])+GRAY+" ("+WHITE+n['fluidTank']['Amount']+GRAY+" / "+WHITE+cap+GRAY+" mB"+")"}
		}
	</init>
    <tileentity id="Geothermal Generator">
		<line displayname="hudmsg.IC2.LavaAmount">
			if(nbt['fluidTank']['Empty']==undefined) {
				return nbt['fluidTank']['Amount']+GRAY+" / "+WHITE+"8000"+GRAY+" mB"
		}
		</line>
    </tileentity>
	<tileentity id="Nuclear Reactor">
		<line displayname="Output">
			return nbt['output']*5+GRAY+" EU/t"
		</line>
    </tileentity>
	<tileentity id="BatBox">
		<line displayname="Stored">
			return Math.floor(nbt['energy'])+GRAY+" / "+WHITE+"40000"+GRAY+" EU"
		</line>
		<line displayname="Output">
			return "32"+GRAY+" EU/t"
		</line>
		<line displayname="hudmsg.IC2.Charging">
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']!=1) {
			return name(nbt['InvSlots']['charge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['charge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"}
		</line>
		<line>
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']==1) {
			return RED+name(nbt['InvSlots']['charge']['Contents'][0])+" Charge Completed"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="CESU">
		<line displayname="Stored">
			return Math.floor(nbt['energy'])+GRAY+" / "+WHITE+"300000"+GRAY+" EU"
		</line>
		<line displayname="Output">
			return "128"+GRAY+" EU/t"
		</line>
	<line displayname="hudmsg.IC2.Charging">
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']!=1) {
			return name(nbt['InvSlots']['charge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['charge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"}
		</line>
		<line>
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']==1) {
			return RED+name(nbt['InvSlots']['charge']['Contents'][0])+" Charge Completed"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="MFE">
		<line displayname="Stored">
			return Math.floor(nbt['energy'])+GRAY+" / "+WHITE+"4000000"+GRAY+" EU"
		</line>
		<line displayname="Output">
			return "512"+GRAY+" EU/t"
		</line>
	<line displayname="hudmsg.IC2.Charging">
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']!=1) {
			return name(nbt['InvSlots']['charge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['charge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"}
		</line>
		<line>
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']==1) {
			return RED+name(nbt['InvSlots']['charge']['Contents'][0])+" Charge Completed"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="MFSU">
		<line displayname="Stored">
			return Math.floor(nbt['energy'])+GRAY+" / "+WHITE+"40000000"+GRAY+" EU"
		</line>
		<line displayname="Output">
			return "2048"+GRAY+" EU/t"
		</line>
	<line displayname="hudmsg.IC2.Charging">
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']!=1) {
			return name(nbt['InvSlots']['charge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['charge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"}
		</line>
		<line>
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']==1) {
			return RED+name(nbt['InvSlots']['charge']['Contents'][0])+" Charge Completed"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Chargepad BatBox">
		<line displayname="Stored">
			return nbt['energy']+GRAY+" / "+WHITE+"40000"+GRAY+" EU"
		</line>
		<line displayname="Output">
			return "32"+GRAY+" EU/t"
		</line>
    </tileentity>
	<tileentity id="Chargepad CESU">
		<line displayname="Stored">
			return Math.floor(nbt['energy'])+GRAY+" / "+WHITE+"300000"+GRAY+" EU"
		</line>
		<line displayname="Output">
			return "128"+GRAY+" EU/t"
		</line>
    </tileentity>
	<tileentity id="Chargepad MFE">
		<line displayname="Stored">
			return Math.floor(nbt['energy'])+GRAY+" / "+WHITE+"4000000"+GRAY+" EU"
		</line>
		<line displayname="Output">
			return "512"+GRAY+" EU/t"
		</line>
    </tileentity>
	<tileentity id="Chargepad MFSU">
		<line displayname="Stored">
			return Math.floor(nbt['energy'])+GRAY+" / "+WHITE+"40000000"+GRAY+" EU"
		</line>
		<line displayname="Output">
			return "2048"+GRAY+" EU/t"
		</line>
    </tileentity>
	<tileentity id="Chargepad.*">
		<line displayname="hudmsg.IC2.Charging">
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']!=1) {
			return name(nbt['InvSlots']['charge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['charge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"}
		</line>
		<line>
			if(nbt['InvSlots']['charge']['Contents'][0]['Damage']==1) {
			return RED+name(nbt['InvSlots']['charge']['Contents'][0])+" Charge Completed"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
    </tileentity>
	<tileentity id="Electric Furnace">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Macerator">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Extractor">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Compressor">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Canning Machine">
		<line displayname="Mode">
			switch(nbt['mode']) {
				case 0:return "Canning";
					break;
				case 1:return "Drain Cell into Tank";
					break;
				case 2:return "Drain Tank into Cell";
					break;
				case 3:return "Fluid Enrichment";
					break;}
		</line>
		<line displayname="Output Tank">
			gticot(nbt,8000)
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Miner">
		<line>
			return name(nbt['InvSlots']['drill']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['drill']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['drill']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['drill']['Contents'][0])+" was out of power"}
		</line>
		<line>
			return name(nbt['InvSlots']['scanner']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['scanner']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['scanner']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['scanner']['Contents'][0])+" was out of power"}
		</line>
		<line>
			return name(nbt['InvSlots']['pipe']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['pipe']['Contents'][0]['Count']+GRAY+")"
		</line>
		<line>
			if(nbt['InvSlots']['pipe']['Contents'][0]==undefined) {
			return RED+"Need Mining Pipe"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Pump">
		<line>
			gticft(nbt,8000)
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Magnetizer">
	</tileentity>
	<tileentity id="Recycler">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Induction Furnace">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Mass Fabricator">
		<line displayname="Amplifier">
			return (nbt['scrap']).toFixed(0)
		</line>
		<line>
			gticft(nbt,8000)
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Terraformer">
		<line>
			return name(nbt['InvSlots']['tfbp']['Contents'][0])
		</line>
	</tileentity>
	<tileentity id="Teleporter">
		<line>
            if(nbt['targetSet']==1) {
			return""}
			else{
			return"No Target"}
		</line>
	</tileentity>
	<tileentity id="Tesla Coil">
	</tileentity>
	<tileentity id="Crop-Matron">
		<line>
			gticft(nbt,2000)
		</line>
		<line>
			if(nbt['InvSlots']['weedEx']['Contents'][0]==undefined) {
			return RED+"Need Weed-EX"}
		</line>
		<line>
			if(nbt['InvSlots']['fertilizer']['Contents'][0]==undefined) {
			return RED+"Need Fertiliser"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Thermal Centrifuge">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
		<tileentity id="Metal Former">
		<line displayname="Mode">
			switch(nbt['mode']) {
				case 0:return "Extruding";
					break;
				case 1:return "Rolling";
					break;
				case 2:return "Cutting";
					break;}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Ore Washing Plant">
		<line>
			gticft(nbt,8000)
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Scanner">
		<line>
			switch(nbt['state']) {
				case 0:return YELLOW+"Idle";
					break;
				case 1:return GREEN+"Scanning..."+GRAY+" ("+WHITE+name(nbt['InvSlots']['input']['Contents'][0])+GRAY+")";
					break;
				case 2:return GREEN+"Scan Completed"+GRAY+" ("+WHITE+name(nbt['pattern'])+GRAY+")";
					break;
				case 4:return YELLOW+"Waiting... No Storage";
					break;
				case 5:return RED+"Energy Loss";
					break;}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Replicator">
		<line>
			switch(nbt['mode']) {
				case 0:return YELLOW+"Waiting...";
					break;
				case 1:return GREEN+"Single Run"+GRAY+" ("+WHITE+name(nbt['pattern'])+GRAY+")";
					break;
				case 2:return GREEN+"Repeat Run"+GRAY+" ("+WHITE+name(nbt['pattern'])+GRAY+")";
					break;}
		</line>
		<line>
			gticft(nbt,16000)
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Solid Canner Maschine">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Fluid Bottler Maschine">
		<line>
			gticft(nbt,8000)
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Advanced Miner">
		<line>
            if(nbt['blacklist']==1) {
			return GREEN+"Mode: Blacklist"}
			else{
			return GREEN+"Mode: Whitelist"}
		</line>
		<line>
            if(nbt['silktouch']==0) {
			return GREEN+"Silktouch: Off"}
			else{
			return GREEN+"Silktouch: On"}
		</line>
		<line>
			return GREEN+"X: "+nbt['xcounter']+" Z: "+nbt['zcounter']+" Y: "+nbt['minelayer']
		</line>
		<line>
			return name(nbt['InvSlots']['scanner']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['scanner']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['scanner']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['scanner']['Contents'][0])+" was out of power"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Fluid Regulator">
		<line>
			if(nbt['mode']==0) {
			return GREEN+nbt['outputmb']+"mB /sec"}
			else{
			return GREEN+nbt['outputmb']+"mB /tick"}
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Crop Havester">
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Block Cutter">
		<line>
		if(nbt['InvSlots']['cutterSlot']['Contents'][0]==undefined) {
			return WHITE+"Block Cutting Blade is too weak or missing"}
		else{
			return name(nbt['InvSlots']['cutterSlot']['Contents'][0])}
		</line>
		<line>
		if(nbt['InvSlots']['cutterSlot']['Contents'][0]!=undefined)
		if(nbt['InvSlots']['input']['Contents'][0]!=undefined)
		if(nbt['energy']!=0)
		if(nbt['active']==0)
			return WHITE+"Block Cutting Blade is too weak or missing"
		</line>
		<line displayname="hudmsg.IC2.Discharging">
			return name(nbt['InvSlots']['discharge']['Contents'][0])+GRAY+" ("+WHITE+nbt['InvSlots']['discharge']['Contents'][0]['tag']['charge'].toFixed(0)+GRAY+" EU)"
		</line>
		<line>
			if(nbt['InvSlots']['discharge']['Contents'][0]['tag']==undefined) {
			return RED+name(nbt['InvSlots']['discharge']['Contents'][0])+" was out of power"}
		</line>
	</tileentity>
	<tileentity id="Iron Furnace">
		<line displayname="hud.msg.progress">
			return nbt['progress'] / 20+GRAY+"/"+GRAY+"8 s"
		</line>
		<line displayname="hud.msg.common.BurnTime">
            return nbt['fuel'] / 20+GRAY+"/"+nbt['maxFuel']/20+GRAY+" s"
        </line>
    </tileentity>
	<tileentity id="Electric Furnace">
		<line displayname="hud.msg.progress">
			return nbt['progress'] / 20+GRAY+"/"+GRAY+"5 s"
		</line>
		<line displayname="hud.msg.energy">
		    return nbt['energy']+GRAY+" EU"
		</line>
    </tileentity>
	<tileentity id="TECrop">
		<line displayname="Crop:">
			return name(nbt['cropName'])
		</line>
		<line displayname="Mod:">
            return nbt['cropOwner']
        </line>
        <line displayname="Growth G/Gain G/Resistance R:">
            if(nbt['cropName']!=undefined){return nbt['statGrowth']+"/"+nbt['statGain']+"/"+nbt['statResistance']}
        </line>		
		<line displayname="Nutrition/Pesticide/Water:">
            if(nbt['exStorage']!=0||nbt['nutrientStorage']!=0||nbt['waterStorage']!=0)
			{return nbt['nutrientStorage']+"/"+nbt['exStorage']+"/"+nbt['waterStorage']}
        </line>
	</tileentity>
</oo>
